{"remainingRequest":"D:\\SpringBootWorkSpace\\SpringBootVueApplication\\client\\node_modules\\babel-loader\\lib\\index.js!D:\\SpringBootWorkSpace\\SpringBootVueApplication\\client\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\SpringBootWorkSpace\\SpringBootVueApplication\\client\\src\\Api.js","dependencies":[{"path":"D:\\SpringBootWorkSpace\\SpringBootVueApplication\\client\\src\\Api.js","mtime":1553898441728},{"path":"D:\\SpringBootWorkSpace\\SpringBootVueApplication\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1553366306859},{"path":"D:\\SpringBootWorkSpace\\SpringBootVueApplication\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1553366231644},{"path":"D:\\SpringBootWorkSpace\\SpringBootVueApplication\\client\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1553366297514}],"contextDependencies":[],"result":["import axios from 'axios';\nvar SERVER_URL = 'http://localhost:9000';\nvar instance = axios.create({\n  baseURL: SERVER_URL,\n  timeout: 1000\n});\nexport default {\n  // (C)reate  \n  createNew: function createNew(text, completed) {\n    return instance.post('todos', {\n      title: text,\n      completed: completed\n    });\n  },\n  // (R)ead  \n  getAll: function getAll() {\n    return instance.get('todos', {\n      transformResponse: [function (data) {\n        return data ? JSON.parse(data)._embedded.todos : data;\n      }]\n    });\n  },\n  // (U)pdate  \n  updateForId: function updateForId(id, text, completed) {\n    return instance.put('todos/' + id, {\n      title: text,\n      completed: completed\n    });\n  },\n  // (D)elete  \n  removeForId: function removeForId(id) {\n    return instance.delete('todos/' + id);\n  }\n};",{"version":3,"sources":["D:\\SpringBootWorkSpace\\SpringBootVueApplication\\client\\src\\Api.js"],"names":["axios","SERVER_URL","instance","create","baseURL","timeout","createNew","text","completed","post","title","getAll","get","transformResponse","data","JSON","parse","_embedded","todos","updateForId","id","put","removeForId","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,UAAU,GAAG,uBAAnB;AAEA,IAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAEH,UADmB;AAE5BI,EAAAA,OAAO,EAAE;AAFmB,CAAb,CAAjB;AAKA,eAAe;AAEb;AACAC,EAAAA,SAAS,EAAE,mBAACC,IAAD,EAAOC,SAAP;AAAA,WAAqBN,QAAQ,CAACO,IAAT,CAAc,OAAd,EAAuB;AAACC,MAAAA,KAAK,EAAEH,IAAR;AAAcC,MAAAA,SAAS,EAAEA;AAAzB,KAAvB,CAArB;AAAA,GAHE;AAKb;AACAG,EAAAA,MAAM,EAAE;AAAA,WAAMT,QAAQ,CAACU,GAAT,CAAa,OAAb,EAAsB;AAClCC,MAAAA,iBAAiB,EAAE,CAAC,UAAUC,IAAV,EAAgB;AAClC,eAAOA,IAAI,GAAEC,IAAI,CAACC,KAAL,CAAWF,IAAX,EAAiBG,SAAjB,CAA2BC,KAA7B,GAAqCJ,IAAhD;AACD,OAFkB;AADe,KAAtB,CAAN;AAAA,GANK;AAYb;AACAK,EAAAA,WAAW,EAAE,qBAACC,EAAD,EAAKb,IAAL,EAAWC,SAAX;AAAA,WAAyBN,QAAQ,CAACmB,GAAT,CAAa,WAASD,EAAtB,EAA0B;AAACV,MAAAA,KAAK,EAAEH,IAAR;AAAcC,MAAAA,SAAS,EAAEA;AAAzB,KAA1B,CAAzB;AAAA,GAbA;AAgBb;AACAc,EAAAA,WAAW,EAAE,qBAACF,EAAD;AAAA,WAAQlB,QAAQ,CAACqB,MAAT,CAAgB,WAASH,EAAzB,CAAR;AAAA;AAjBA,CAAf","sourcesContent":["import axios from 'axios' \r\n\r\nconst SERVER_URL = 'http://localhost:9000';  \r\n  \r\nconst instance = axios.create({  \r\n  baseURL: SERVER_URL,  \r\n  timeout: 1000  \r\n});  \r\n  \r\nexport default {  \r\n  \r\n  // (C)reate  \r\n  createNew: (text, completed) => instance.post('todos', {title: text, completed: completed}),  \r\n \r\n  // (R)ead  \r\n  getAll: () => instance.get('todos', {  \r\n    transformResponse: [function (data) {  \r\n      return data? JSON.parse(data)._embedded.todos : data;  \r\n    }]  \r\n  }),  \r\n  \r\n  // (U)pdate  \r\n  updateForId: (id, text, completed) => instance.put('todos/'+id, {title: text, completed: completed}),  \r\n  \r\n  \r\n  // (D)elete  \r\n  removeForId: (id) => instance.delete('todos/'+id)  \r\n}\r\n\r\n"]}]}